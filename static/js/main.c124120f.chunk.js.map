{"version":3,"sources":["components/TitleBar.js","helper.js","constants.js","UI/TodoCard/TodoCard.js","components/TodoCanvas/TodoCanvas.js","components/ActionBar/Filter.js","components/ActionBar/Analytics.js","UI/TodoForm/TodoForm.js","components/ActionBar/CreateTodo.js","UI/Backdrop/Backdrop.js","server.js","hooks/useTodos.js","App.js","hooks/useFilters.js","reportWebVitals.js","index.js"],"names":["TitleBar","dateString","Date","toLocaleDateString","weekday","month","day","year","split","slice","join","className","URGENCY_LOW","URGENCY_MEDIUM","URGENCY_HIGH","URGENCY_LIST","CATEGORY_PERSONAL","CATEGORY_ACADEMIC","CATEGORY_SOCIAL","CATEGORY_LIST","TodoCard","todo","styles","onToggleSelection","onToggleComplete","onDeleteTodo","onSetEditMode","urgencyIconColor","urgency","categoryIcon","faUser","categoryIconColor","category","faBook","faUsers","iconStyle","margin","height","width","display","style","isSelected","isComplete","onClick","id","icon","faEdit","faTrash","title","date","time","faExclamationTriangle","color","TodoCanvas","React","memo","todoList","selectedTodos","onToggleSelect","onBatchComplete","onBatchUndo","onBatchDelete","map","t","has","flex","faCheck","faSquare","Filter","filters","onToggle","f","iconColor","name","getIconAndStyles","bind","Analytics","count","filter","length","total","Math","round","TodoForm","onSubmit","onCancel","initValues","showButtons","initTitle","initCategory","initUrgency","useState","setTitle","setUrgency","setCategory","titleChangeHandler","useCallback","ev","target","value","urgencyChangeHandler","categoryChangeHandler","submitHandler","preventDefault","cancelHandler","actionButtons","type","placeholder","onChange","Option","optionList","op","toUpperCase","CreateTodo","Backdrop","props","children","_getTodoListFromLS","res","localStorage","getItem","JSON","parse","_setTodoListintoLS","setItem","stringify","toggleTodosComplete","ids","markComplete","Promise","resolve","reject","setTimeout","idSet","Set","deleteTodos","useTodos","setTodoList","setSelectedTodos","useEffect","then","catch","err","console","log","addTodoHandler","hour","minute","second","trim","random","push","addNewTodo","tl","toggleSingleCompleteHandler","toggleSingleSelectHandler","updatedSet","delete","add","toggleBatchCompleteHandler","deleteSingleTodoHandler","deleteBatchTodoHandler","editTodoHandler","editIndex","index","findIndex","editTodo","updatedList","addTodo","toggleSingleComplete","toggleSingleSelect","toggleBatchComplete","deleteSingleTodo","deleteBatchTodo","App","concat","setFilters","toggleFilterhandler","toggleFilter","useFilters","editMode","setEditMode","setEditIndex","toggleEditMode","e","filteredTodos","useMemo","todos","every","some","getFilteredTodos","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c124120f.chunk.js","sourcesContent":["import React from \"react\";\nimport { getDateString } from \"../helper\";\nexport const TitleBar = () => {\n  const dateString = getDateString();\n\n  return (\n    <div className=\"block titlebar\">\n      <span className=\"date\">{dateString}</span>\n      <span>To-Do App</span>\n    </div>\n  );\n};\n","export const getFilteredTodos = (todos, filters) => {\n  if (filters.every((f) => f.isSelected === false)) return todos;\n  return todos.filter((t) =>\n    filters.some(\n      (f) => f.isSelected && (t.urgency === f.name || t.category === f.name)\n    )\n  );\n};\n\nexport const getDateString = () => {\n    return new Date()\n      .toLocaleDateString(\"en-US\", {\n        weekday: \"short\",\n        month: \"short\",\n        day: \"2-digit\",\n        year: \"numeric\",\n      })\n      .split(\" \")\n      .slice(0, 4)\n      .join(\" \");\n}","export const URGENCY_LOW = \"low\";\nexport const URGENCY_MEDIUM = \"medium\";\nexport const URGENCY_HIGH = \"high\";\nexport const URGENCY_LIST = [URGENCY_LOW, URGENCY_MEDIUM, URGENCY_HIGH];\n\nexport const CATEGORY_PERSONAL = \"personal\";\nexport const CATEGORY_ACADEMIC = \"academic\";\nexport const CATEGORY_SOCIAL = \"social\";\nexport const CATEGORY_LIST = [\n  CATEGORY_PERSONAL,\n  CATEGORY_ACADEMIC,\n  CATEGORY_SOCIAL,\n];\n","import React from \"react\";\nimport \"./TodoCard.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faEdit,\n  faExclamationTriangle,\n  faTrash,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  CATEGORY_ACADEMIC,\n  CATEGORY_SOCIAL,\n  URGENCY_HIGH,\n  URGENCY_MEDIUM,\n} from \"../../constants\";\n\nfunction TodoCard({\n  todo,\n  styles,\n  onToggleSelection,\n  onToggleComplete,\n  onDeleteTodo,\n  onSetEditMode,\n}) {\n  let urgencyIconColor = \"gray\";\n\n  if (todo.urgency === URGENCY_MEDIUM) {\n    urgencyIconColor = \"yellow\";\n  } else if (todo.urgency === URGENCY_HIGH) {\n    urgencyIconColor = \"red\";\n  }\n\n  let categoryIcon = faUser;\n  let categoryIconColor = \"cyan\";\n\n  if (todo.category === CATEGORY_ACADEMIC) {\n    categoryIcon = faBook;\n    categoryIconColor = \"grey\";\n  } else if (todo.category === CATEGORY_SOCIAL) {\n    categoryIcon = faUsers;\n    categoryIconColor = \"orange\";\n  }\n\n  const iconStyle = {\n    margin: \"auto\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n  };\n\n  return (\n    <div\n      style={{ ...styles }}\n      className={\n        \"todocard\" +\n        (todo.isSelected ? \" selected\" : \"\") +\n        (todo.isComplete ? \" completed\" : \"\")\n      }\n    >\n      <div className=\"todocard-hoveroption\">\n        <div onClick={() => onSetEditMode(todo.id)}>\n          <FontAwesomeIcon icon={faEdit} style={{ ...iconStyle }} />\n        </div>\n        <div onClick={() => onDeleteTodo(todo.id)}>\n          <FontAwesomeIcon icon={faTrash} style={{ ...iconStyle }} />\n        </div>\n      </div>\n      <p className=\"todocard-title\">{todo.title}</p>\n      <p className=\"todocard-datetime\">{todo.date + \", \" + todo.time}</p>\n      <div className=\"todocard-statusicon\">\n        <div>\n          <FontAwesomeIcon\n            icon={faExclamationTriangle}\n            style={{ color: urgencyIconColor, ...iconStyle }}\n          />\n        </div>\n        <div>\n          <FontAwesomeIcon\n            icon={categoryIcon}\n            style={{ color: categoryIconColor, ...iconStyle }}\n          />\n        </div>\n      </div>\n      <button\n        className=\"todocard-btn-mark\"\n        onClick={() => onToggleComplete(todo.id)}\n      >\n        {!todo.isComplete ? \"Mark Complete\" : \"Completed. Undo?\"}\n      </button>\n      <div\n        className={\"todocard-select\" + (todo.isSelected ? \" red-bg\" : \"\")}\n        onClick={() => onToggleSelection(todo.id)}\n      ></div>\n    </div>\n  );\n}\n\nexport default TodoCard;\n","import { faCheck, faSquare, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport TodoCard from \"../../UI/TodoCard/TodoCard\";\nimport \"./TodoCanvas.css\";\n\nexport const TodoCanvas = React.memo(\n  ({\n    todoList,\n    selectedTodos,\n    onToggleSelect,\n    onToggleComplete,\n    onDeleteTodo,\n    onSetEditMode,\n    onBatchComplete,\n    onBatchUndo,\n    onBatchDelete,\n  }) => {\n    const iconStyle = { height: \"100%\", width: \"100%\", color: \"white\" };\n    return (\n      <div className=\"block todocanvas\">\n        <div className=\"todocanvas-display\">\n          {todoList.map((t) => (\n            <TodoCard\n              todo={{ ...t, isSelected: selectedTodos.has(t.id) }}\n              styles={{ flex: \"0 0 25%\", height: \"40%\" }}\n              key={t.id}\n              onToggleSelection={onToggleSelect}\n              onToggleComplete={onToggleComplete}\n              onDeleteTodo={onDeleteTodo}\n              onSetEditMode={onSetEditMode}\n            />\n          ))}\n        </div>\n        <div className=\"todocanvas-option-menu\">\n          <div className=\"todocanvas-option\" onClick={onBatchComplete}>\n            <FontAwesomeIcon icon={faCheck} style={iconStyle} />\n          </div>\n          <div className=\"todocanvas-option\" onClick={onBatchUndo}>\n            <FontAwesomeIcon icon={faSquare} style={iconStyle} />\n          </div>\n          <div className=\"todocanvas-option\" onClick={onBatchDelete}>\n            <FontAwesomeIcon icon={faTrash} style={iconStyle} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faExclamationTriangle,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  CATEGORY_ACADEMIC,\n  CATEGORY_PERSONAL,\n  CATEGORY_SOCIAL,\n  URGENCY_HIGH,\n  URGENCY_LOW,\n  URGENCY_MEDIUM,\n} from \"../../constants\";\n\nconst getIconAndStyles = ({ name, isSelected }) => {\n  let icon, iconColor;\n\n  switch (name) {\n    case URGENCY_LOW:\n      icon = faExclamationTriangle;\n      iconColor = \"grey\";\n      break;\n    case URGENCY_MEDIUM:\n      icon = faExclamationTriangle;\n      iconColor = \"yellow\";\n      break;\n    case URGENCY_HIGH:\n      icon = faExclamationTriangle;\n      iconColor = \"red\";\n      break;\n    case CATEGORY_PERSONAL:\n      icon = faUser;\n      iconColor = \"cyan\";\n      break;\n    case CATEGORY_ACADEMIC:\n      icon = faBook;\n      iconColor = \"grey\";\n      break;\n    case CATEGORY_SOCIAL:\n      icon = faUsers;\n      iconColor = \"orange\";\n      break;\n    default:\n      break;\n  }\n  const styles = {\n    margin: \"auto\",\n    height: isSelected ? \"80%\" : \"50%\",\n    width: isSelected ? \"80%\" : \"50%\",\n    display: \"block\",\n    color: iconColor,\n  };\n  return { icon, styles };\n};\n\nexport const Filter = React.memo(({ filters, onToggle }) => {\n  return (\n    <div className=\"block filters\">\n      <div>\n        {filters.map((f) => {\n          const { icon, styles } = getIconAndStyles(f);\n          return (\n            <div key={f.name} onClick={onToggle.bind(null, f.name)}>\n              <FontAwesomeIcon icon={icon} style={styles} />\n            </div>\n          );\n        })}\n      </div>\n      <p>Filter Todos</p>\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport const Analytics = React.memo(({ todoList }) => {\n  const count = todoList.filter((t) => t.isComplete).length;\n  const total = todoList.length;\n  return (\n    <div className=\"block analytics\">\n      <div>\n        <p>{`${Math.round((count * 100) / (total ? total : 1))} %`}</p>\n        <br />\n        <p>{`${count} / ${total}`}</p>\n      </div>\n      <p>Analytics</p>\n    </div>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport {\n  CATEGORY_LIST,\n  CATEGORY_PERSONAL,\n  URGENCY_LIST,\n  URGENCY_LOW,\n} from \"../../constants\";\nimport \"./TodoForm.css\";\n\nexport const TodoForm = React.memo(\n  ({ onSubmit, onCancel, initValues, showButtons = false }) => {\n    let initTitle = \"\",\n      initCategory = CATEGORY_PERSONAL,\n      initUrgency = URGENCY_LOW;\n    if (initValues) {\n      initTitle = initValues.title;\n      initUrgency = initValues.urgency;\n      initCategory = initValues.category;\n    }\n\n    const [title, setTitle] = useState(initTitle);\n    const [urgency, setUrgency] = useState(initUrgency);\n    const [category, setCategory] = useState(initCategory);\n\n    const titleChangeHandler = useCallback(\n      (ev) => setTitle(ev.target.value),\n      []\n    );\n    const urgencyChangeHandler = useCallback(\n      (ev) => setUrgency(ev.target.value),\n      []\n    );\n    const categoryChangeHandler = useCallback(\n      (ev) => setCategory(ev.target.value),\n      []\n    );\n\n    const submitHandler = (ev) => {\n      if (ev) ev.preventDefault();\n      onSubmit(title, urgency, category);\n      setTitle(initTitle);\n      setUrgency(initUrgency);\n      setCategory(initCategory);\n    };\n    const cancelHandler = useCallback(() => {\n      onCancel();\n    }, [onCancel]);\n\n    let actionButtons = null;\n\n    if (showButtons) {\n      actionButtons = (\n        <div className=\"todoform-buttons\">\n          <button onClick={cancelHandler}>Cancel</button>\n          <button onClick={submitHandler} type=\"submit\">\n            Save\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <form onSubmit={submitHandler} className=\"todoform\">\n        <div className=\"todoform-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Add your Todo...\"\n            value={title}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <Option\n          title=\"Urgency\"\n          optionList={URGENCY_LIST}\n          value={urgency}\n          onChange={urgencyChangeHandler}\n        />\n        <Option\n          title=\"Category\"\n          optionList={CATEGORY_LIST}\n          value={category}\n          onChange={categoryChangeHandler}\n        />\n        {actionButtons}\n      </form>\n    );\n  }\n);\n\nfunction Option({ title, optionList, value, onChange }) {\n  return (\n    <div className=\"todoform-option\">\n      <label>{title}</label>\n      <br></br>\n      <select value={value} onChange={onChange}>\n        {optionList.map((op) => (\n          <option value={op} key={op}>\n            {op[0].toUpperCase() + op.slice(1)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TodoForm } from \"../../UI/TodoForm/TodoForm\";\n\nexport const CreateTodo = React.memo(({ onSubmit }) => {\n  return (\n    <div className=\"block createtodo\">\n      <div className=\"createtodo-heading\">\n        <div>Create Todo</div>\n      </div>\n      <div className=\"createtodo-form\">\n        <TodoForm onSubmit={onSubmit} />\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport \"./Backdrop.css\";\nexport const Backdrop = ({ ...props }) => {\n  return <div className=\"backdrop\">{props.children}</div>;\n};\n","const DELAY = 0;\n\nconst _getTodoListFromLS = () => {\n  const res = localStorage.getItem(\"todoList\");\n  if (res) return JSON.parse(res);\n  return [];\n};\n\nconst _setTodoListintoLS = (todoList) => {\n  localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n};\n\nexport const getAllTodos = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(_getTodoListFromLS());\n    }, 1000);\n  });\n};\n\nexport const addNewTodo = (title, urgency, category) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const date = new Date().toLocaleDateString(\"en-uk\");\n      const time = new Date()\n        .toLocaleDateString(\"en-us\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n        })\n        .split(\",\")[1]\n        .trim();\n      const todo = {\n        title,\n        urgency,\n        category,\n        date,\n        time,\n        isComplete: false,\n        id: date + time + Math.random(),\n      };\n      const todoList = _getTodoListFromLS();\n      todoList.push(todo);\n      _setTodoListintoLS(todoList);\n      resolve(todo);\n    }, DELAY);\n  });\n};\nexport const toggleTodosComplete = (ids, markComplete) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const idSet = new Set(ids);\n      const todoList = _getTodoListFromLS().map((t) => {\n        if (idSet.has(t.id)) t.isComplete = markComplete ?? !t.isComplete;\n        return t;\n      });\n      _setTodoListintoLS(todoList);\n      resolve(todoList);\n    }, DELAY);\n  });\n};\n\nexport const deleteTodos = (ids) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const idSet = new Set(ids);\n      const todoList = _getTodoListFromLS().filter((t) => !idSet.has(t.id));\n      _setTodoListintoLS(todoList);\n      resolve(todoList);\n    }, DELAY);\n  });\n};\n\nexport const editTodo = (id, title, urgency, category) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const todoList = _getTodoListFromLS();\n      const index = todoList.findIndex((t) => t.id === id);\n      todoList[index] = {\n        ...todoList[index],\n        title,\n        urgency,\n        category,\n      };\n\n      _setTodoListintoLS(todoList);\n      resolve(todoList[index]);\n    }, DELAY);\n  });\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport {\n  addNewTodo,\n  deleteTodos,\n  editTodo,\n  getAllTodos,\n  toggleTodosComplete,\n} from \"../server\";\n\nexport const useTodos = () => {\n  const [todoList, setTodoList] = useState([]);\n  const [selectedTodos, setSelectedTodos] = useState(new Set());\n\n  useEffect(() => {\n    getAllTodos()\n      .then((res) => {\n        setTodoList(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const addTodoHandler = useCallback((title, urgency, category) => {\n    addNewTodo(title, urgency, category)\n      .then((res) => {\n        setTodoList((tl) => [...tl, res]);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const toggleSingleCompleteHandler = useCallback((id) => {\n    toggleTodosComplete([id])\n      .then(setTodoList)\n      .catch((err) => console.log(err));\n  }, []);\n\n  const toggleSingleSelectHandler = useCallback(\n    (id) => {\n      const updatedSet = new Set(selectedTodos);\n      if (updatedSet.has(id)) {\n        updatedSet.delete(id);\n      } else updatedSet.add(id);\n\n      setSelectedTodos(updatedSet);\n    },\n    [selectedTodos]\n  );\n\n  const toggleBatchCompleteHandler = useCallback(\n    (markComplete = true) => {\n      toggleTodosComplete([...selectedTodos], markComplete)\n        .then((res) => {\n          setTodoList(res);\n          setSelectedTodos(new Set());\n        })\n        .catch((err) => console.log(err));\n    },\n    [selectedTodos]\n  );\n\n  const deleteSingleTodoHandler = useCallback((id) => {\n    deleteTodos([id])\n      .then((res) => {\n        setTodoList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const deleteBatchTodoHandler = useCallback(() => {\n    deleteTodos([...selectedTodos])\n      .then((res) => {\n        setTodoList(res);\n        setSelectedTodos(new Set());\n      })\n      .catch((err) => console.log(err));\n  }, [selectedTodos]);\n\n  const editTodoHandler = useCallback(\n    (editIndex, title, urgency, category) => {\n      editTodo(todoList[editIndex].id, title, urgency, category)\n        .then((res) => {\n          setTodoList((tl) => {\n            const updatedList = [...tl];\n            updatedList[editIndex] = res;\n            return updatedList;\n          });\n        })\n        .catch((err) => console.log(err));\n    },\n    [todoList]\n  );\n\n  return {\n      todoList,\n      selectedTodos,\n    addTodo: addTodoHandler,\n    toggleSingleComplete: toggleSingleCompleteHandler,\n    toggleSingleSelect: toggleSingleSelectHandler,\n    toggleBatchComplete: toggleBatchCompleteHandler,\n    deleteSingleTodo: deleteSingleTodoHandler,\n    deleteBatchTodo: deleteBatchTodoHandler,\n    editTodo: editTodoHandler,\n  };\n};\n","import \"./App.css\";\nimport { TitleBar } from \"./components/TitleBar\";\nimport { TodoCanvas } from \"./components/TodoCanvas/TodoCanvas\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Filter } from \"./components/ActionBar/Filter\";\nimport { Analytics } from \"./components/ActionBar/Analytics\";\nimport { CreateTodo } from \"./components/ActionBar/CreateTodo\";\nimport { Backdrop } from \"./UI/Backdrop/Backdrop\";\nimport { TodoForm } from \"./UI/TodoForm/TodoForm\";\n\nimport { useTodos } from \"./hooks/useTodos\";\nimport { getFilteredTodos } from \"./helper\";\nimport { useFilters } from \"./hooks/useFilters\";\n\nconst App = () => {\n  const {\n    todoList,\n    selectedTodos,\n    addTodo,\n    toggleSingleComplete,\n    toggleSingleSelect,\n    toggleBatchComplete,\n    deleteSingleTodo,\n    deleteBatchTodo,\n    editTodo,\n  } = useTodos();\n\n  const { filters, toggleFilter } = useFilters();\n\n  const [editMode, setEditMode] = useState(false);\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const toggleEditMode = useCallback(\n    (id) => {\n      setEditMode((e) => !e);\n      if (id) setEditIndex(todoList.findIndex((t) => t.id === id));\n    },\n    [todoList]\n  );\n  const editTodoHandler = useCallback(\n    (title, urgency, category) => {\n      editTodo(editIndex, title, urgency, category);\n      toggleEditMode();\n    },\n    [editTodo, toggleEditMode, editIndex]\n  );\n\n  const filteredTodos = useMemo(() => getFilteredTodos(todoList, filters), [\n    todoList,\n    filters,\n  ]);\n\n  return (\n    <div className=\"App\">\n      {editMode && (\n        <Backdrop>\n          <div className=\"backdrop-form-container\">\n            <TodoForm\n              onSubmit={editTodoHandler}\n              initValues={todoList[editIndex]}\n              showButtons={true}\n              onCancel={toggleEditMode}\n            />\n          </div>\n        </Backdrop>\n      )}\n      <TitleBar />\n      <div className=\"container-body\">\n        <TodoCanvas\n          todoList={filteredTodos}\n          selectedTodos={selectedTodos}\n          onToggleSelect={toggleSingleSelect}\n          onToggleComplete={toggleSingleComplete}\n          onDeleteTodo={deleteSingleTodo}\n          onSetEditMode={toggleEditMode}\n          onBatchComplete={toggleBatchComplete.bind(null, true)}\n          onBatchUndo={toggleBatchComplete.bind(null, false)}\n          onBatchDelete={deleteBatchTodo}\n        />\n\n        <div className=\"actionbar\">\n          <Filter filters={filters} onToggle={toggleFilter} />\n          <Analytics todoList={filteredTodos} />\n          <CreateTodo onSubmit={addTodo} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { useCallback, useState } from \"react\";\nimport { CATEGORY_LIST, URGENCY_LIST } from \"../constants\";\n\nexport const useFilters = () => {\n  const [filters, setFilters] = useState(\n    URGENCY_LIST.concat(CATEGORY_LIST).map((name) => ({\n      name,\n      isSelected: false,\n    }))\n  );\n\n  const toggleFilterhandler = useCallback(\n    (name) => {\n      const updatedList = [...filters];\n      const index = updatedList.findIndex((f) => f.name === name);\n      updatedList[index].isSelected = !updatedList[index].isSelected;\n      setFilters(updatedList);\n    },\n    [filters]\n  );\n\n  return { filters, toggleFilter: toggleFilterhandler };\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}